/*
 * ReplaceDirectView.java
 */
package replacedirect;

import javax.swing.filechooser.FileFilter;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import javax.swing.JFileChooser;
import java.awt.event.*;
import java.io.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * The application's main frame.
 */
public class ReplaceDirectView extends FrameView {

    private String status = "DISABLED";
    private int linenumber = 0;

    public ReplaceDirectView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // scrollbar options
        jScrollPane4.getVerticalScrollBar().setModel(jScrollPane3.getVerticalScrollBar().getModel());
        jTextArea3.setEditable(false);
        jTextArea4.setEditable(false);
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jButton7.setEnabled(false);
        jButton8.setEnabled(false);
        jButton9.setEnabled(false);
        

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;

            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {

                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        reg1 = new javax.swing.JMenuItem();
        reg2 = new javax.swing.JMenuItem();
        reg3 = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        mainPanel.setName("mainPanel"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setName("jTextArea2"); // NOI18N
        jScrollPane2.setViewportView(jTextArea2);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(replacedirect.ReplaceDirectApp.class).getContext().getResourceMap(ReplaceDirectView.class);
        jTextArea3.setText(resourceMap.getString("jTextArea3.text")); // NOI18N
        jTextArea3.setName("jTextArea3"); // NOI18N
        jTextArea3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea3MouseClicked(evt);
            }
        });
        jTextArea3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea3KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTextArea3);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jTextArea4.setText(resourceMap.getString("jTextArea4.text")); // NOI18N
        jTextArea4.setName("jTextArea4"); // NOI18N
        jScrollPane4.setViewportView(jTextArea4);

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator1.setName("jSeparator1"); // NOI18N

        jSeparator2.setName("jSeparator2"); // NOI18N

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        jTextField2.setText(resourceMap.getString("jTextField2.text")); // NOI18N
        jTextField2.setName("jTextField2"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText(resourceMap.getString("jButton7.text")); // NOI18N
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText(resourceMap.getString("jButton8.text")); // NOI18N
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText(resourceMap.getString("jButton9.text")); // NOI18N
        jButton9.setName("jButton9"); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText(resourceMap.getString("jButton10.text")); // NOI18N
        jButton10.setName("jButton10"); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jTextField3.setText(resourceMap.getString("jTextField3.text")); // NOI18N
        jTextField3.setName("jTextField3"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                        .addComponent(jButton10))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9))
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        mainPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane3, jScrollPane4});

        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton7)
                            .addComponent(jButton8)
                            .addComponent(jButton9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton1)
                    .addComponent(jButton5)
                    .addComponent(jButton2)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addGap(34, 34, 34))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(replacedirect.ReplaceDirectApp.class).getContext().getActionMap(ReplaceDirectView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        reg1.setText(resourceMap.getString("reg1.text")); // NOI18N
        reg1.setName("reg1"); // NOI18N
        reg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reg1ActionPerformed(evt);
            }
        });
        jMenu1.add(reg1);

        reg2.setText(resourceMap.getString("reg2.text")); // NOI18N
        reg2.setName("reg2"); // NOI18N
        reg2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reg2ActionPerformed(evt);
            }
        });
        jMenu1.add(reg2);

        reg3.setText(resourceMap.getString("reg3.text")); // NOI18N
        reg3.setName("reg3"); // NOI18N
        reg3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reg3ActionPerformed(evt);
            }
        });
        jMenu1.add(reg3);

        menuBar.add(jMenu1);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:


        try {

            Highlighter h = jTextArea2.getHighlighter();
            h.removeAllHighlights();

            // loop through 
            String[] find = jTextArea3.getText().split("\n");

            for (int i = 0; i < find.length; i++) {

                //kleur
                DefaultHighlighter.DefaultHighlightPainter highlightPainter =
                        new DefaultHighlighter.DefaultHighlightPainter(java.awt.Color.GREEN);

                String regex = find[i];
                Pattern p = Pattern.compile(regex.replaceAll("\\^", "\n").replaceAll("\\$", "\n"));

                Matcher matcher = p.matcher(jTextArea2.getText());

                while (matcher.find()) {
                    h.addHighlight(matcher.start(), matcher.end(), highlightPainter);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        // loop through 
        String[] find = jTextArea3.getText().split("\n");
        String[] replace = jTextArea4.getText().split("\n");

        for (int i = 0; i < find.length; i++) {

            String replacement = "";
            
            String finder = "";
            String finder1 = "";
            
            if (i < replace.length && !replace[i].equalsIgnoreCase("[REMOVE]")) {
                replacement = replace[i];
            }
            
            if( find[i].contains("^") ){
                find[i] = find[i].replaceAll("\\^", "");
                replacement = "\n" + replacement;
                
                finder = "\n";
            }
            
            if( find[i].contains("$") ){
                find[i] = find[i].replaceAll("\\$", "");
                replacement = replacement + "\n" ;
                
                finder1 = "\n";
            }

            jTextArea2.setText(jTextArea2.getText().replaceAll( finder + find[i] + finder1 , replacement ) ) ;
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextArea3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea3MouseClicked
        // TODO add your handling code here:
        try {

            status = "DISABLED";

            int f = jTextArea3.getCaretPosition();
            int line = jTextArea3.getLineOfOffset(f);

            //satus
            linenumber = line;

            Highlighter h = jTextArea3.getHighlighter();
            h.removeAllHighlights();

            Highlighter h0 = jTextArea4.getHighlighter();
            h0.removeAllHighlights();

            Highlighter h1 = jTextArea2.getHighlighter();
            h1.removeAllHighlights();

            DefaultHighlighter.DefaultHighlightPainter highlightPainter =
                    new DefaultHighlighter.DefaultHighlightPainter(java.awt.Color.GREEN);

            // Add highlighter to 
            h.addHighlight(jTextArea3.getLineStartOffset(line), jTextArea3.getLineEndOffset(line), highlightPainter);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(false);
            jButton9.setEnabled(true);

            jTextField1.setEditable(false);
            jTextField2.setEditable(false);

            String[] find = jTextArea3.getText().split("\n");
            String[] replace = jTextArea4.getText().split("\n");

            try {
                if (!replace[line].isEmpty()) {
                    h0.addHighlight(jTextArea4.getLineStartOffset(line), jTextArea4.getLineEndOffset(line), highlightPainter);
                }
            } catch (Exception e) {// do nothing YET
            }
            // highlight text
            // loop through 


            // fill in fields
            String em = "";

            if (!replace[line].equalsIgnoreCase("[REMOVE]")) {
                em = replace[line];
            }
            jTextField1.setText(find[line]);
            jTextField2.setText(em);

            String regex = find[line];

            if (!regex.isEmpty()) {
                Pattern p = Pattern.compile(regex.replaceAll("\\^", "\n").replaceAll("\\$", "\n"));

                Matcher matcher = p.matcher(jTextArea2.getText());
                
                int count = 0;

                while (matcher.find()) {
                    count++;
                    h1.addHighlight(matcher.start(), matcher.end(), highlightPainter);
                }
                
                jTextField3.setText(count + "");
            }


        } catch (Exception e) {
        }
    }//GEN-LAST:event_jTextArea3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

          
        JFileChooser fileopen = new JFileChooser();

        int ret = fileopen.showDialog(null, "Open file");

        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fileopen.getSelectedFile();
           // jTextArea3.setText(file.getPath());
            
            // now read
            
            String result = null;
        DataInputStream in = null;

        try {
            File f = new File(file.getPath());
            byte[] buffer = new byte[(int) f.length()];
            in = new DataInputStream(new FileInputStream(f));
            in.readFully(buffer);
            result = new String(buffer, "ISO-8859-1");
        } catch (IOException e) {
            throw new RuntimeException("IO problem in fileToString", e);
        } finally {
            try {
                in.close();
            } catch (IOException e) { /* ignore it */
            }
        }
            jTextArea2.setText(result.replaceAll("\r", ""));
        }
    
    
        
        /*
        JFileChooser fileopen = new JFileChooser();

        int ret = fileopen.showDialog(null, "Open file");

        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fileopen.getSelectedFile();

            File file1 = new File(file.getPath());
            java.net.URI uri = file1.toURI();
            byte[] bytes = null;
            try {
                bytes = java.nio.file.Files.readAllBytes(java.nio.file.Paths.get(uri));
            } catch (Exception e) {
            }

            String s = new String(bytes);

            jTextArea2.setText(s);

        }*/
    }//GEN-LAST:event_jButton3ActionPerformed

    // unlight all
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        Highlighter h = jTextArea3.getHighlighter();
        h.removeAllHighlights();

        Highlighter h0 = jTextArea4.getHighlighter();
        h0.removeAllHighlights();

        Highlighter h1 = jTextArea2.getHighlighter();
        h1.removeAllHighlights();

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        JFileChooser fileopen = new JFileChooser();

        int ret = fileopen.showDialog(null, "Save File");

        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fileopen.getSelectedFile();
            try {

                File newTextFile = new File(file.getPath());
                FileWriter fileWriter = new FileWriter(newTextFile);
                fileWriter.write(jTextArea2.getText());
                fileWriter.close();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextArea3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea3KeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            try {
//                int f = jTextArea3.getCaretPosition();
//                int line = jTextArea3.getLineOfOffset(f);
//                
//                String[] l = jTextArea4.getText().split("\n");
//                
//                String ne = "";
//                for (int i = 0; i < l.length; i++) {
//                    if(line == i){
//                        ne += "[EMPTY]\n";
//                    }
//                    ne += l[i];
//                }
//                
//                // update
//                
//                jTextArea4.setText(ne);
//                
//            } catch (Exception e) {
//            }
//            
//        }
    }//GEN-LAST:event_jTextArea3KeyPressed

    // New
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        // unlight
        jButton5ActionPerformed(null);

        jTextField1.setText("");
        jTextField2.setText("");

        jTextField1.setEditable(true);
        jTextField2.setEditable(true);

        status = "NEW";

        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        jButton9.setEnabled(false);
        jButton8.setEnabled(true);


    }//GEN-LAST:event_jButton6ActionPerformed

    // save button
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        if (!jTextField1.getText().isEmpty()) {

            jButton5ActionPerformed(null);

            if (status.equalsIgnoreCase("NEW")) {

                jButton6.setEnabled(true);
                jButton8.setEnabled(false);

                jTextField1.setEditable(false);
                jTextField2.setEditable(false);

                String extra = "";

                if (!jTextArea3.getText().isEmpty()) {
                    extra = "\n";
                }

                String replace = "[REMOVE]";

                if (!jTextField2.getText().isEmpty()) {
                    replace = jTextField2.getText();
                }

                jTextArea3.setText(jTextArea3.getText() + extra + jTextField1.getText());
                jTextArea4.setText(jTextArea4.getText() + extra + replace);
            } else if (status.equalsIgnoreCase("EDIT")) {
                jButton6.setEnabled(true);
                jButton7.setEnabled(false);
                jButton8.setEnabled(false);
                jButton9.setEnabled(false);

                jTextField1.setEditable(false);
                jTextField2.setEditable(false);

                // remove truukje
                // set boxes
                String[] l3 = jTextArea3.getText().split("\n");
                String[] l4 = jTextArea4.getText().split("\n");

                int size = l3.length;

                String ne3 = "";
                String ne4 = "";

                for (int i = 0; i < size; i++) {

                    String extra = "";

                    if (i < (size - 1)) {
                        extra = "\n";
                    }

                    // remove line
                    if (linenumber == i) {
                        ne3 += jTextField1.getText() + extra;
                        
                        String replace = "[REMOVE]";

                if (!jTextField2.getText().isEmpty()) {
                    replace = jTextField2.getText();
                }
                
                        ne4 += replace + extra;
                    } else {
                        ne3 += l3[i] + extra;
                        ne4 += l4[i] + extra;
                    }
                }

                
                
                jTextArea3.setText(ne3);
                jTextArea4.setText(ne4);

                jTextField1.setText("");
                jTextField2.setText("");


                /*
                String extra = "";
                
                if (!jTextArea3.getText().isEmpty()) {
                extra = "\n";
                }
                
                String replace = "[REMOVE]";
                
                if ( !jTextField2.getText().isEmpty() ) {
                replace = jTextField2.getText();
                }
                
                jTextArea3.setText( jTextArea3.getText() + extra +  jTextField1.getText() );
                jTextArea4.setText( jTextArea4.getText() + extra +  replace );*/
            }

            jTextField1.setText("");
            jTextField2.setText("");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    // Remove
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        jButton5ActionPerformed(null);

        jButton6.setEnabled(true);
        jButton7.setEnabled(false);
        jButton8.setEnabled(false);
        jButton9.setEnabled(false);

        // set boxes
        String[] l3 = jTextArea3.getText().split("\n");
        String[] l4 = jTextArea4.getText().split("\n");

        int size = l3.length;

        String ne3 = "";
        String ne4 = "";

        for (int i = 0; i < size; i++) {

            String extra = "";

            if (i < (size - 1)) {
                extra = "\n";
            }

            // remove line
            if (linenumber != i) {
                ne3 += l3[i] + extra;
                ne4 += l4[i] + extra;
            }
        }

        jTextArea3.setText(ne3);
        jTextArea4.setText(ne4);

        jTextField1.setText("");
        jTextField2.setText("");

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        jTextField1.setEditable(true);
        jTextField2.setEditable(true);

        status = "EDIT";

        jButton6.setEnabled(true);
        jButton7.setEnabled(false);
        jButton8.setEnabled(true);
        jButton9.setEnabled(true);



    }//GEN-LAST:event_jButton7ActionPerformed

    

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        try {
            Highlighter h = jTextArea3.getHighlighter();
            h.removeAllHighlights();

            Highlighter h0 = jTextArea4.getHighlighter();
            h0.removeAllHighlights();

            DefaultHighlighter.DefaultHighlightPainter highlightPainter =
                    new DefaultHighlighter.DefaultHighlightPainter(java.awt.Color.GREEN);

            // Add highlighter to 
            h.addHighlight(0, jTextArea3.getText().length(), highlightPainter);
            h0.addHighlight(0, jTextArea4.getText().length(), highlightPainter);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    
    // open
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileopen = new JFileChooser();

        FileFilter filter = new FileNameExtensionFilter( "RDT File (.rdt)", "rdt");
        fileopen.addChoosableFileFilter(filter);
        int ret = fileopen.showDialog(null, "Open file");

        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fileopen.getSelectedFile();
           // jTextArea3.setText(file.getPath());
            
            // now read
            
            String result = null;
        DataInputStream in = null;

        try {
            File f = new File(file.getPath());
            byte[] buffer = new byte[(int) f.length()];
            in = new DataInputStream(new FileInputStream(f));
            in.readFully(buffer);
            result = new String(buffer, "ISO-8859-1");
            
            
            
        } catch (IOException e) {
            throw new RuntimeException("IO problem in fileToString", e);
        } finally {
            try {
                in.close();
            } catch (IOException e) { /* ignore it */
            }
        }
            jTextArea3.setText(result.split("XXXXXXXXXX")[0]);
            jTextArea4.setText(result.split("XXXXXXXXXX")[1]);
            
            jButton6.setEnabled(true);
                jButton7.setEnabled(false);
                jButton8.setEnabled(false);
                jButton9.setEnabled(false);
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    //save
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileopen = new JFileChooser();

        int ret = fileopen.showSaveDialog(null);

        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fileopen.getSelectedFile();
            try {
                File newTextFile = new File(file.getPath() + ".rdt");
                FileWriter fileWriter = new FileWriter(newTextFile, false);
                fileWriter.write(jTextArea3.getText() + "XXXXXXXXXX" + jTextArea4.getText());
                fileWriter.close();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void reg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reg1ActionPerformed
        jTextField1.setText(jTextField1.getText() + "[0-9]+");
    }//GEN-LAST:event_reg1ActionPerformed

    private void reg2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reg2ActionPerformed
        jTextField1.setText(jTextField1.getText() + " [ ]+");
    }//GEN-LAST:event_reg2ActionPerformed

    private void reg3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reg3ActionPerformed
        jTextField1.setText(jTextField1.getText() + "\\(.*\\)");
    }//GEN-LAST:event_reg3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem reg1;
    private javax.swing.JMenuItem reg2;
    private javax.swing.JMenuItem reg3;
    // End of variables declaration//GEN-END:variables
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private JDialog aboutBox;
}
